services:
  proxy:
    build: 
      dockerfile: ./proxy/Dockerfile
    command: uvicorn app:init_app --reload --host 0.0.0.0 --port 8000 --factory
    environment:
      PYTHONPATH : /app/proto:/app:/app/app
      SECRET_KEY : ${SECRET_KEY}
      ALGORITHM : ${ALGORITHM}
      AUTH_URL : "http://auth:8000"
      POSTS_GRPC_URL : "posts:50051"
    volumes:
      - ./proxy/:/app/app/
    ports:
      - 8002:8000
    depends_on:
      - auth
      - posts

  auth:
    build: 
      dockerfile: ./auth/Dockerfile
    entrypoint: ./auth_entrypoint.sh
    volumes:
      - ./auth/:/app/
    ports:
      - 8001:8000
    environment:
      DATABASE_URL : "postgresql+asyncpg://movie_db_username:movie_db_password@movie_db/movie_db_dev"
      SECRET_KEY : ${SECRET_KEY}
      ALGORITHM : ${ALGORITHM}
    depends_on:
      - movie_db

  movie_db:
    image: postgres:12.1-alpine
    volumes:
      - postgres_data_users:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=movie_db_username
      - POSTGRES_PASSWORD=movie_db_password
      - POSTGRES_DB=movie_db_dev
    ports:
      - "13500:5432"

  posts:
    build: 
      dockerfile: ./posts/Dockerfile
    entrypoint: ./app/posts_entrypoint.sh
    # entrypoint: ./auth_entrypoint.sh
    volumes:
      - ./posts/:/app/app/
    ports:
      - 50051:50051
      - 8003:8000
    environment:
      DATABASE_URL : ${POSTS_DATABASE_URL}
      PYTHONPATH : "/app/proto:/app:/app/app"
    depends_on:
      - posts_db

  posts_db:
    image: postgres:12.1-alpine
    volumes:
      - postgres_posts_users:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=posts_db_username
      - POSTGRES_PASSWORD=posts_db_password
      - POSTGRES_DB=posts_db_dev
    ports:
      - "13501:5432"

volumes:
  postgres_data_users:
  postgres_posts_users: